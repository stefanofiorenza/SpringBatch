<beans:beans xmlns="http://www.springframework.org/schema/batch" 
     xmlns:beans="http://www.springframework.org/schema/beans"
     xmlns:context="http://www.springframework.org/schema/context"
     xmlns:batch="http://www.springframework.org/schema/batch" 
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="
           http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/batch 
           http://www.springframework.org/schema/batch/spring-batch-3.0.xsd">

	<beans:import resource="classpath:common/SBatch200-COP-Common.xml"/>
	
	   <!-- JDBC COMMON DEPENDENCIES  --> 		
	<beans:bean id="bonificoRowMapper" class="corso.spring.batch.demo.cop.jdbc.BonificoRowMapper"/>
    
    
    
    <!-- JDBC CURSOR READER DEPENDENCIES  -->
      <!--
	    <beans:bean id="bonificoPaymentByAmountSetter" class="corso.spring.batch.demo.cop.jdbc.BonificoQueryByAmountPsSetter" >
			<beans:property name="amount" value="100.0" /> 
		</beans:bean>
			
	    <beans:bean id="jdbcCursorItemReader" class="org.springframework.batch.item.database.JdbcCursorItemReader">
	        <beans:property name="dataSource" ref="dataSource" />
	        <beans:property name="sql" value="select * from payments where amount > ?" />
	        <beans:property name="rowMapper" ref="bonificoRowMapper" />
	        <beans:property name="preparedStatementSetter" ref="bonificoPaymentByAmountSetter" />
	    </beans:bean>
    	-->
    	
    
     <!-- JDBC PAGINATION READER DEPENDENCIES  -->
      <!--
	     <beans:bean id="bonificoByAmountQueryProvider" class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean">
	    	<beans:property name="selectClause" value="select *"/>
			<beans:property name="fromClause" value="from Payments"/>
			<beans:property name="whereClause" value="where amount > :amount"/>
			<beans:property name="sortKey" value="date"/>
			<beans:property name="dataSource" ref="dataSource"/>
	    </beans:bean> 
	        
	    
	    <beans:bean id="jdbcPagingItemReader" class="org.springframework.batch.item.database.JdbcPagingItemReader" scope="step">
			<beans:property name="dataSource" ref="dataSource"/>		
			<beans:property name="queryProvider" ref="bonificoByAmountQueryProvider"/>				
			<beans:property name="pageSize" value="50"/>
			<beans:property name="rowMapper" ref="bonificoRowMapper"/>
			<beans:property name="parameterValues">
				<beans:map>
					<beans:entry key="amount" value="100.0"/>
				</beans:map>
			</beans:property>
	 	</beans:bean> 
    -->
    
     <!-- JDBC WRITER  -->
     
     <beans:bean id="bonificoInsertPsSetter" class="corso.spring.batch.demo.cop.jdbc.BonificoInsertPsSetter" />
     	 
    <beans:bean id="jdbcBatchItemWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<beans:property name="dataSource" ref="dataSource"/>
		<beans:property name="sql" 
		value="insert into Payments_Processed (orderId, payer, ibanPayer, beneficiary, ibanBeneficiary, amount, date, description, referenceNumber) values (?,?,?,?,?,?,?,?,?)" />
		<beans:property name="itemPreparedStatementSetter" ref="bonificoInsertPsSetter"/>
	</beans:bean>
	
		
	
	   <!-- JDBC DEMOS BEANS  -->
	<beans:bean id="mioProcessor" class="corso.spring.batch.demo.cop.processors.BonificoProcessor" scope="step">
    	<beans:property name="evaluateExceptionRetryable" value="#{jobParameters[procExceptionRetryable]}" />
    	<beans:property name="throwExceptionRollback" value="#{jobParameters[procExceptionRollback]}" />
    	<beans:property name="throwExceptionRuntime" value="#{jobParameters[procExceptionRuntime]}" />
    </beans:bean>
    
    
	<beans:bean id="mioWriter" class="corso.spring.batch.demo.cop.jdbc.wrappers.JdbcWriterWrapper" scope="step" >
		<beans:property name="evaluateExceptionRetryable" value="#{jobParameters[writerExceptionRetryable]}" />
    	<beans:property name="throwExceptionRollback" value="#{jobParameters[writerExceptionRollback]}" />
    	<beans:property name="throwExceptionRuntime" value="#{jobParameters[writerExceptionRuntime]}" />
    	<beans:property name="delegate" ref="jdbcBatchItemWriter"/>
    </beans:bean>
    
</beans:beans>