<beans:beans xmlns="http://www.springframework.org/schema/batch" 
     xmlns:beans="http://www.springframework.org/schema/beans"
     xmlns:batch="http://www.springframework.org/schema/batch" 
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="
           http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
           http://www.springframework.org/schema/batch 
           http://www.springframework.org/schema/batch/spring-batch-3.0.xsd">
           
      
  		<beans:import resource="SBatch-COP-00-Common.xml"/>
    
    
        <beans:bean id="bonificoFieldSetMapper" class="corso.spring.batch.demo.cop.flatfiles.BonificoFieldSetMapper" />
      
      	
        <beans:bean id="bonificoLineTokenizer" class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer" >          
           	<beans:property name="names" value="orderId,payer,ibanPayer,beneficiary,ibanBeneficiary,amount,date,description,referenceNumber" />
            <beans:property name="delimiter"  value="," />                
        </beans:bean>
      
      	<!-- LineMappers -->
        <beans:bean id="bonificoLineMapper" class="org.springframework.batch.item.file.mapping.DefaultLineMapper">  
                <beans:property name="lineTokenizer" ref="bonificoLineTokenizer"/>
                <beans:property name="fieldSetMapper" ref="bonificoFieldSetMapper"/>                 
        </beans:bean>
            
            
      <beans:bean id="mioReader" class="org.springframework.batch.item.file.FlatFileItemReader">    
          	<beans:property name="resource" value="classpath:in/payments.csv" />             
        	<beans:property name="lineMapper" ref="bonificoLineMapper"/>
      </beans:bean>    
      
      
      <beans:bean id="mioWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">
        <beans:property name="resource" ref="outputFile" />
        <beans:property name="lineAggregator"  ref="passThroughLineAggregator" />   
        <beans:property name="appendAllowed" value="true"/>    
        <beans:property name="shouldDeleteIfEmpty" value="true"/>
        <beans:property name="shouldDeleteIfExists" value="true"/>      
    </beans:bean>
      
     
    
   <!--  LINE AGGREGATORS (Object to csv line)-->
   
   
     <!-- 1) PassThroughLineAggregator  => bean.toString()  -->
     <beans:bean id="passThroughLineAggregator" class="org.springframework.batch.item.file.transform.PassThroughLineAggregator" />
     
     <!-- 2) FormatterLineAggregator  => String.format (fieldExtractor Obj[]) -->
     <beans:bean id="formattedLineAggregator" class="org.springframework.batch.item.file.transform.FormatterLineAggregator">
		<beans:property name="fieldExtractor" ref="bonificoFieldExtractor"/>
		<beans:property name="format" value="%s, %s, %s, %s, %s, %s,%s, %s, %s"/>
	</beans:bean>
	
	
	<!--  FIELD EXTRACTORS => bean to Object[] (fields values)-->
	
		<!--2.1)  BeanWrapperFieldExtractor => (bean props with reflection)-->
		<beans:bean id="beanWrapperFieldExtractor" class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
					<beans:property name="names" value="orderId,ibanPayer,ibanBeneficiary,payer,beneficiary,amount,date,description,referenceNumber"/>
		</beans:bean>
		
		<!-- 2.2) BonificoFieldExtractor => (custom impl)-->
		<beans:bean id="bonificoFieldExtractor" class="corso.spring.batch.demo.cop.flatfiles.BonificoFieldExtractor" />
	
           
</beans:beans>